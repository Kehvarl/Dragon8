0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF  00  0,0

0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF  00  0,10

0xFFFF,0xFFFE,0xFEFC,0xFCF9,0xFBF2,0xF0F0,0xF8FC,0xFEFF  10, 8, 0

0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF  00, 8,10

0x8083,0x0100,0x3EFF,0xFF87,0x1C38,0x7870,0xF070,0x783C  20  10,0

0x9ECE,0xE7F3,0xF9FD,0xFEFE,0xFFFF,0xFFFF,0xFFFF,0xFFFF  30  10,10

0x0080,0xC1EE,0x67E3,0xE7EF,0xDF9F,0x1E1E,0x1E0F,0x0F0F  40  18,0

0x0F03,0x0381,0xC1E1,0xF078,0x3F9F,0xCFE7,0xF3F8,0xFCFF  50  18,10

0x0000,0xC0FC,0xFFFB,0xFFFF,0xFF7F,0xCCA0,0x70D0,0x38A4  60  20,0

0xDED9,0xE3F6,0x7470,0x79F1,0xF3E7,0xCF9F,0x3F7F,0xFFFF  70  20,10

0x0707,0x0301,0x31F8,0xF8FC,0xF810,0x0000,0x0000,0x0103  80  28,0

0x070F,0x1F3F,0x7FFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF  90  28,10

0xFFFF,0xFFFF,0xFFFF,0x7F7F,0x4F1F,0x4F7F,0xFFFF,0xFFFF  a0  30,0

0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF  00  30,10

0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF  00  38,0

0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF  00  38,0


0x6XKK # Load KK into Register X
0xANNN # Load NNN into I
0xDXYF # draw a 16 byte sprite from I at RegX,RegY


x=0, y=a
0xA264 ; Load I (Adress) to 0x264
0x6000 ; Load 00 into Register 0
0x6100 ; Load 00 into Register 1
0xD01F ; Draw 16-byte Sprite from Address I on Screen at Register0, Register1
0x6110
0xD01F
0x6008
0xD01F
0x6030
0xD01F
0x6038
0xD01F
0x6100
0xD01F
0xA274
0x6008
0x6100
0xD01F
0xA284
0x6010
0x6100
0xD01F
0xA2A4
0x6110
0xD01F
0xA2B4
0x6018
0x6100
0xD01F
0xA2C4
0x6110
0xD01F
0xA2D4
0x6020
0x6100
0xD01F
0xA2E4
0x6110
0xD01F
0xA2F4
0x6028
0x6100
0xD01F
0xA304
0x6110
0xD01F
0xA314
0x6030
0x6100
0xD01F
0x1264
0x6008
0x6100
0xD01F
0xA284
0x6010
0x6100
0xD01F
0xA2A4
0x6110
0xD01F
0xA2B4
0x6018
0x6100
0xD01F
0xA2C4
0x6110
0xD01F
0xA2D4
0x6020
0x6100
0xD01F
0xA2E4
0x6110
0xD01F
0xA2F4
0x6028
0x6100
0xD01F
0xA304
0x6110
0xD01F
0xA314
0x6030
0x6100
0xD01F
0x1264



0xA310, 0x6000, 0x6100, 0xD01F, 0x6110, 0xD01F, 0x6008, 0xD01F,
0x6030, 0xD01F, 0x6038, 0xD01F, 0x6100, 0xD01F, 0xA320, 0x6008,
0x6100, 0xD01F, 0xA330, 0x6010, 0x6100, 0xD01F, 0xA330, 0x6110,
0xD01F, 0xA340, 0x6018, 0x6100, 0xD01F, 0xA350, 0x6110, 0xD01F,
0xA360, 0x6020, 0x6100, 0xD01F, 0xA370, 0x6110, 0xD01F, 0xA380,
0x6028, 0x6100, 0xD01F, 0xA390, 0x6110, 0xD01F, 0xA3A0, 0x6030,
0x6100, 0xD01F, 0x1264, 0x6008, 0x6100, 0xD01F, 0xA3B0, 0x6010,
0x6100, 0xD01F, 0xA3C0, 0x6110, 0xD01F, 0xA3D0, 0x6018, 0x6100,
0xD01F, 0xA3E0, 0x6110, 0xD01F, 0xA3F0, 0x6020, 0x6100, 0xD01F,
0xA400, 0x6110, 0xD01F, 0xA410, 0x6028, 0x6100, 0xD01F, 0xA420,
0x6110, 0xD01F, 0xA430, 0x6030, 0x6100, 0xD01F, 0x1264,

0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
0xFFFF, 0xFFFE, 0xFEFC, 0xFCF9, 0xFBF2, 0xF0F0, 0xF8FC, 0xFEFF,
0x8083, 0x0100, 0x3EFF, 0xFF87, 0x1C38, 0x7870, 0xF070, 0x783C,
0x9ECE, 0xE7F3, 0xF9FD, 0xFEFE, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
0x0080, 0xC1EE, 0x67E3, 0xE7EF, 0xDF9F, 0x1E1E, 0x1E0F, 0x0F0F,
0x0F03, 0x0381, 0xC1E1, 0xF078, 0x3F9F, 0xCFE7, 0xF3F8, 0xFCFF,
0x0000, 0xC0FC, 0xFFFB, 0xFFFF, 0xFF7F, 0xCCA0, 0x70D0, 0x38A4,
0xDED9, 0xE3F6, 0x7470, 0x79F1, 0xF3E7, 0xCF9F, 0x3F7F, 0xFFFF,
0x0707, 0x0301, 0x31F8, 0xF8FC, 0xF810, 0x0000, 0x0000, 0x0103,
0x070F, 0x1F3F, 0x7FFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
0xFFFF, 0xFFFF, 0xFFFF, 0x7F7F, 0x3F1F, 0x3F7F, 0xFFFF, 0xFFFF

  args.state.cpu.set([0xA264, 0x6000, 0x6100, 0xD01F, 0x6110, 0xD01F, 0x6008, 0xD01F,
  		      0x6030, 0xD01F, 0x6038, 0xD01F, 0x6100, 0xD01F, 0xA274, 0x6008,
		      0x6100, 0xD01F, 0xA284, 0x6010, 0x6100, 0xD01F, 0xA2A4, 0x6110,
		      0xD01F, 0xA2B4, 0x6018, 0x6100, 0xD01F, 0xA2C4, 0x6110, 0xD01F,
		      0xA2D4, 0x6020, 0x6100, 0xD01F, 0xA2E4, 0x6110, 0xD01F, 0xA2F4,
		      0x6028, 0x6100, 0xD01F, 0xA304, 0x6110, 0xD01F, 0xA314, 0x6030,
		      0x6100, 0xD01F, 0x1264, 0x6008, 0x6100, 0xD01F, 0xA284, 0x6010,
		      0x6100, 0xD01F, 0xA2A4, 0x6110, 0xD01F, 0xA2B4, 0x6018, 0x6100,
		      0xD01F, 0xA2C4, 0x6110, 0xD01F, 0xA2D4, 0x6020, 0x6100, 0xD01F,
		      0xA2E4, 0x6110, 0xD01F, 0xA2F4, 0x6028, 0x6100, 0xD01F, 0xA304,
		      0x6110, 0xD01F, 0xA314, 0x6030, 0x6100, 0xD01F, 0x1264,
	        0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
          0xFFFF, 0xFFFE, 0xFEFC, 0xFCF9, 0xFBF2, 0xF0F0, 0xF8FC, 0xFEFF,
          0x8083, 0x0100, 0x3EFF, 0xFF87, 0x1C38, 0x7870, 0xF070, 0x783C,
          0x9ECE, 0xE7F3, 0xF9FD, 0xFEFE, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
          0x0080, 0xC1EE, 0x67E3, 0xE7EF, 0xDF9F, 0x1E1E, 0x1E0F, 0x0F0F,
          0x0F03, 0x0381, 0xC1E1, 0xF078, 0x3F9F, 0xCFE7, 0xF3F8, 0xFCFF,
          0x0000, 0xC0FC, 0xFFFB, 0xFFFF, 0xFF7F, 0xCCA0, 0x70D0, 0x38A4,
          0xDED9, 0xE3F6, 0x7470, 0x79F1, 0xF3E7, 0xCF9F, 0x3F7F, 0xFFFF,
          0x0707, 0x0301, 0x31F8, 0xF8FC, 0xF810, 0x0000, 0x0000, 0x0103,
          0x070F, 0x1F3F, 0x7FFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
          0xFFFF, 0xFFFF, 0xFFFF, 0x7F7F, 0x3F1F, 0x3F7F, 0xFFFF, 0xFFFF], 0x200)


  # Load Logo Sprites starting at 0x400
  args.state.cpu.set([0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
                      0xFFFF, 0xFFFE, 0xFEFC, 0xFCF9, 0xFBF2, 0xF0F0, 0xF8FC, 0xFEFF,
                      0x8083, 0x0100, 0x3EFF, 0xFF87, 0x1C38, 0x7870, 0xF070, 0x783C,
                      0x9ECE, 0xE7F3, 0xF9FD, 0xFEFE, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
                      0x0080, 0xC1EE, 0x67E3, 0xE7EF, 0xDF9F, 0x1E1E, 0x1E0F, 0x0F0F,
                      0x0F03, 0x0381, 0xC1E1, 0xF078, 0x3F9F, 0xCFE7, 0xF3F8, 0xFCFF,
                      0x0000, 0xC0FC, 0xFFFB, 0xFFFF, 0xFF7F, 0xCCA0, 0x70D0, 0x38A4,
                      0xDED9, 0xE3F6, 0x7470, 0x79F1, 0xF3E7, 0xCF9F, 0x3F7F, 0xFFFF,
                      0x0707, 0x0301, 0x31F8, 0xF8FC, 0xF810, 0x0000, 0x0000, 0x0103,
                      0x070F, 0x1F3F, 0x7FFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
                      0xFFFF, 0xFFFF, 0xFFFF, 0x7F7F, 0x3F1F, 0x3F7F, 0xFFFF, 0xFFFF], 0x400)
  # Draw Routine Starting at 0x200.  Set PC to 0x200
  args.state.cpu.set([0xA400, 0x6000, 0x6100, 0xD01F, 0x6110, 0xD01F, 0x6008, 0xD01F,
                      0x6030, 0xD01F, 0x6038, 0xD01F, 0x6100, 0xD01F, 0xA410, 0x6008,
                      0x6100, 0xD01F, 0xA420, 0x6010, 0x6100, 0xD01F, 0xA430, 0x6110,
                      0xD01F, 0xA440, 0x6018, 0x6100, 0xD01F, 0xA450, 0x6110, 0xD01F,
                      0xA460, 0x6020, 0x6100, 0xD01F, 0xA470, 0x6110, 0xD01F, 0xA480,
                      0x6028, 0x6100, 0xD01F, 0xA490, 0x6110, 0xD01F, 0xA4A0, 0x6030,
                      0x6100, 0xD01F, 0x1264], 0x200)

A2AE 6000 6101 D01F 6111 D01F 6008 D01F
6030 D01F 6038 D01F 6101 D01F A2BE 6008
6101 D01F A2CE 6010 6101 D01F A2DE 6111
D01F A2EE 6018 6101 D01F A2FE 6111 D01F
A30E 6020 6101 D01F A31E 6111 D01F A32E
6028 6101 D01F A33E 6111 D01F A34E 6030
6101 D01F 1264 6008 6101 D01F A35E 6011
6101 D01F A36E 6111 D01F A37E 6018 6101
D01F A38E 6111 D01F A39E 6020 6101 D01F
A3AE 6111 D01F A3BE 6028 6101 D01F A3CE
6110 D01F A3DE 6030 6101 D01F 1264 FFFF
FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF
FFFE FEFC FCF9 FBF2 F0F0 F8FC FEFF 8083
0100 3EFF FF87 1C38 7870 F070 783C 9ECE
E7F3 F9FD FEFE FFFF FFFF FFFF FFFF 0080
C1EE 67E3 E7EF DF9F 1E1E 1E0F 0F0F 0F03
0381 C1E1 F078 3F9F CFE7 F3F8 FCFF 0000
C0FC FFFB FFFF FF7F CCA0 70D0 38A4 DED9
E3F6 7470 79F1 F3E7 CF9F 3F7F FFFF 0707
0301 31F8 F8FC F810 0000 0000 0103 070F
1F3F 7FFF FFFF FFFF FFFF FFFF FFFF FFFF
FFFF FFFF 7F7F 3F1F 3F7F FFFF FFFF


  args.state.cpu.set([0xA2AE, 0x6000, 0x6101, 0xD01F, 0x6111, 0xD01F, 0x6008, 0xD01F,
                      0x6030, 0xD01F, 0x6038, 0xD01F, 0x6101, 0xD01F, 0xA2BE, 0x6008,
                      0x6101, 0xD01F, 0xA2CE, 0x6010, 0x6101, 0xD01F, 0xA2DE, 0x6111,
                      0xD01F, 0xA2EE, 0x6018, 0x6101, 0xD01F, 0xA2FE, 0x6111, 0xD01F,
                      0xA30E, 0x6020, 0x6101, 0xD01F, 0xA31E, 0x6111, 0xD01F, 0xA32E,
                      0x6028, 0x6101, 0xD01F, 0xA33E, 0x6111, 0xD01F, 0xA34E, 0x6030,
                      0x6101, 0xD01F, 0x1264, 0x6008, 0x6101, 0xD01F, 0xA35E, 0x6011,
                      0x6101, 0xD01F, 0xA36E, 0x6111, 0xD01F, 0xA37E, 0x6018, 0x6101,
                      0xD01F, 0xA38E, 0x6111, 0xD01F, 0xA39E, 0x6020, 0x6101, 0xD01F,
                      0xA3AE, 0x6111, 0xD01F, 0xA3BE, 0x6028, 0x6101, 0xD01F, 0xA3CE,
                      0x6110, 0xD01F, 0xA3DE, 0x6030, 0x6101, 0xD01F, 0x1264,

      	              0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
                      0xFFFF, 0xFFFE, 0xFEFC, 0xFCF9, 0xFBF2, 0xF0F0, 0xF8FC, 0xFEFF,
                      0x8083, 0x0100, 0x3EFF, 0xFF87, 0x1C38, 0x7870, 0xF070, 0x783C,
                      0x9ECE, 0xE7F3, 0xF9FD, 0xFEFE, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
                      0x0080, 0xC1EE, 0x67E3, 0xE7EF, 0xDF9F, 0x1E1E, 0x1E0F, 0x0F0F,
                      0x0F03, 0x0381, 0xC1E1, 0xF078, 0x3F9F, 0xCFE7, 0xF3F8, 0xFCFF,
                      0x0000, 0xC0FC, 0xFFFB, 0xFFFF, 0xFF7F, 0xCCA0, 0x70D0, 0x38A4,
                      0xDED9, 0xE3F6, 0x7470, 0x79F1, 0xF3E7, 0xCF9F, 0x3F7F, 0xFFFF,
                      0x0707, 0x0301, 0x31F8, 0xF8FC, 0xF810, 0x0000, 0x0000, 0x0103,
                      0x070F, 0x1F3F, 0x7FFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
                      0xFFFF, 0xFFFF, 0xFFFF, 0x7F7F, 0x3F1F, 0x3F7F, 0xFFFF, 0xFFFF], 0x200)
